{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","DirectionKeyCodeMap","OppositeDirection","Delta","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.63b60ad4.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\n    const upVisibility = difficulty < 5 ? '' : 'is-hidden';\n    const downVisibility = difficulty > 1 ? '' : 'is-hidden';\n    const onUpDifficulty = () => onChangeDifficulty(difficulty + 1);\n    const onDownDifficulty = () => onChangeDifficulty(difficulty -1) ;\n  return (\n      <div className=\"navigation\">\n        <div className=\"navigation-item\">\n          <span className=\"navigation-label\">Length: </span>\n          <div className=\"navigation-item-number-container\">\n            <div className=\"num-board\">{length}</div>\n          </div>\n        </div>\n        <div className=\"navigation-item\">\n          <span className=\"navigation-label\">Difficulty: </span>\n          <div className=\"navigation-item-number-container\">\n            <span className=\"num-board\">{difficulty}</span>\n            <div className=\"difficulty-button-container\">\n                <div className={`difficulty-button difficulty-up ${upVisibility}`}\n                     onClick={onUpDifficulty}></div>\n                <div className={`difficulty-button difficulty-down ${downVisibility}`}\n                     onClick={onDownDifficulty}></div>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\n\nconst Field = ({ fields }) => {\n  return (\n    <div className=\"field\">\n      {fields.map((row) => {\n        return row.map((column) => {\n          return <div className={`dots ${column}`}></div>;\n        });\n      })}\n    </div>\n  );\n};\n\nexport default Field;\n","import React from 'react';\n\nconst Button = ({ status, onStart, onStop, onRestart }) => {\n  return (\n    <div className=\"button\">\n      { status === \"gameover\" && <button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button> }\n      { status === \"init\" && <button className=\"btn btn-init\" onClick={onStart}>start</button> }\n      { status === \"suspended\" && <button className=\"btn btn-suspended\" onClick={onStart}>start</button> }\n      { status === \"playing\" && <button className=\"btn btn-playing\" onClick={onStop}>stop</button> }\n    </div>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faArrowLeft,\n    faArrowUp,\n    faArrowDown,\n    faArrowRight\n} from '@fortawesome/free-solid-svg-icons';\n\nconst ManipulationPanel = ({onChange}) => {\n    const onUp=()=> onChange('up');\n    const onRight=()=>onChange('right');\n    const onLeft=()=>onChange('left');\n    const onDown=()=> onChange('down');\n\n  return (\n    <div className=\"manipulation-panel\">\n        <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n            <FontAwesomeIcon icon={faArrowLeft} />\n        </button>\n        <div>\n            <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n                <FontAwesomeIcon icon={faArrowUp} />\n            </button>\n            <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n                <FontAwesomeIcon icon={faArrowDown} />\n            </button>\n        </div>\n        <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n            <FontAwesomeIcon icon={faArrowRight} />\n        </button>\n    </div>\n  );\n};\nexport default ManipulationPanel;\n","export const getFoodPosition = (fieldSize, excludes) => {\n  while(true) {\n    const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n    const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n    const conflict = excludes.some(item => item.x === x && item.y === y);\n    if (!conflict) {\n      return { x, y };\n    }\n  }\n}\n\nexport const initFields = (fieldSize, snake) => {\n  const fields = [];\n  for (let i = 0; i < fieldSize; i++) {\n    const cols = new Array(fieldSize).fill('');\n    fields.push(cols);\n  }\n  fields[snake.y][snake.x] = 'snake';\n\n  const food = getFoodPosition(fieldSize, [snake]);\n  fields[food.y][food.x] = 'food';\n\n  return fields;\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport Navigation from './components/Navigation';\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport { initFields, getFoodPosition } from './utils';\n//フィールドの初期化\n//snake position.\nconst initialPosition = { x: 17, y: 17 };\nconst initialValues = initFields(35, initialPosition);\nconst defaultInterval = 100;\nconst defaultDifficulty = 3;\n\nconst Difficulty = [1000, 500, 100, 50, 10];\n\nconst GameStatus= Object.freeze({\n  init:'init',\n  playing:'playing',\n  suspended:'suspended',\n  gameover:'gameover'\n});\n\nconst Direction = Object.freeze({\n  up:'up',\n  right:'right',\n  left:'left',\n  down:'down'\n});\n\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n});\n\nconst OppositeDirection = Object.freeze({\n  up:'down',\n  right:'left',\n  left:'right',\n  down:'up'\n});\n\nconst Delta = Object.freeze({\n  up:{x:0,y:-1},\n  right:{x:1,y:0},\n  left:{x:-1,y:0},\n  down:{x:0,y:1},\n});\n\nlet timer = undefined;\n\nconst unsubscribe = () => {\n  if (!timer) {\n    return;\n  }\n  clearInterval(timer);\n};\n\nconst isCollision = (fieldSize,position)=>{\n  if(position.y<0||position.x<0){\n    return true;\n  }\n  if(position.y>fieldSize-1||position.x>fieldSize-1){\n    return true;\n  }\n  return false;\n}\n\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === 'snake';\n};\n\nfunction App() {\n  //useState管理\n  const [fields, setFields] = useState(initialValues);\n  const [body, setBody] = useState([]);\n  const [status,setStatus]= useState(GameStatus.init);\n  const[direction, setDirection]=useState(Direction.up);\n  const [difficulty, setDifficulty] = useState(defaultDifficulty);\n  const [tick, setTick] = useState(0);\n\n  useEffect(() => {\n    setBody([initialPosition]);\n    // ゲーム中の時間を管理する\n    const interval = Difficulty[difficulty - 1];\n    timer = setInterval(() => {\n      setTick((tick) => tick + 1);\n    }, interval);\n    return unsubscribe;\n  }, [difficulty]);\n\n  useEffect(() => {\n    if (body.length === 0 || status !== GameStatus.playing) {\n      return;\n    }\n    const canContinue = handleMoving();\n    if(!canContinue){\n      unsubscribe();\n      setStatus(GameStatus.gameover);\n    }\n  }, [tick]);\n\n  const onStart=()=> setStatus(GameStatus.playing);\n  const onStop = () => setStatus(GameStatus.suspended);\n\n  const onRestart=()=>{\n    timer=setInterval(()=>{\n      setTick(tick=>tick+1);\n    },defaultInterval);\n    setStatus(GameStatus.init);\n    setBody([initialPosition]);\n    setFields(initFields(35,initialPosition));\n  };\n\n  const onChangeDirection = useCallback((newDirection) => {\n    if(status !== GameStatus.playing){\n      return direction;\n    }\n    if(OppositeDirection[direction] === newDirection){\n      return;\n    }\n    setDirection(newDirection);\n  }, [direction ,status]);\n\n  const onChangeDifficulty = useCallback((difficulty) => {\n    if (status !== GameStatus.init) {\n      return;\n    }\n    if (difficulty < 1 || difficulty > Difficulty.length) {\n      return;\n    }\n    setDifficulty(difficulty);\n  }, [status, difficulty]);\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      if (!newDirection) {\n        return;\n      }\n      onChangeDirection(newDirection);\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [onChangeDirection])\n\n  const handleMoving = () => {\n    const { x, y } = body[0];\n    const delta = Delta[direction];\n    const newPosition = {\n      x: x+delta.x,\n      y: y+delta.y\n    };\n    if (isCollision(fields.length, newPosition) || isEatingMyself(fields, newPosition)) {\n      return false;\n    }\n    const newBody = [...body]\n    if (fields[newPosition.y][newPosition.x] !== 'food') {\n      const removingTrack = newBody.pop();\n      fields[removingTrack.y][removingTrack.x] = '';\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition]);\n      fields[food.y][food.x] = 'food';\n    }\n    fields[newPosition.y][newPosition.x]='snake';\n    newBody.unshift(newPosition);\n    setBody(newBody);\n    setFields(fields);\n    return true;\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">SnakeGame</h1>\n        </div>\n        <Navigation length={body.length}\n                    difficulty={difficulty}\n                    onChangeDifficulty={onChangeDifficulty}\n        />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <footer className=\"footer\">\n        <Button\n            status={status}\n            onStop={onStop}\n            onStart={onStart}\n            onRestart={onRestart}\n        />\n        <ManipulationPanel onChange={onChangeDirection}/>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}